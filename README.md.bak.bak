## Running with Docker

This project provides a full Docker-based setup for both the frontend (Vue.js) and backend (Spring Boot) applications, along with MySQL and Redis services. The configuration is defined in the `compose.yaml` file and custom Dockerfiles for each service.

### Project-Specific Docker Requirements

- **Frontend (`eladmin-web`)**
  - Node.js version: `22.13.1-slim` (as specified by `NODE_VERSION` build arg)
  - Uses `serve` to host the built static files
  - Exposes port **8013**

- **Backend (`eladmin/eladmin-system`)**
  - Java version: Eclipse Temurin JDK 17
  - Exposes port **8080**

- **Database (`mysql`)**
  - Uses the latest MySQL image
  - Exposes port **3306**
  - Default credentials (see below)

- **Cache (`redis`)**
  - Uses the latest Redis image
  - Exposes port **6379**

### Environment Variables

- **MySQL** (set in `compose.yaml`):
  - `MYSQL_ROOT_PASSWORD=eladmin`
  - `MYSQL_DATABASE=eladmin`
  - `MYSQL_USER=eladmin`
  - `MYSQL_PASSWORD=eladmin`

- **Frontend**:
  - You may provide a `.env.production` file in `eladmin-web` for custom environment variables (uncomment `env_file` in the compose file if needed).

### Build and Run Instructions

1. **Clone the repository and ensure Docker and Docker Compose are installed.**

2. **(Optional) Initialize the database:**
   - To auto-initialize MySQL with the provided SQL files, uncomment the `volumes` section for the `mysql` service in `compose.yaml`:
     ```yaml
     volumes:
       - ./sql:/docker-entrypoint-initdb.d
     ```

3. **Build and start all services:**
   ```sh
   docker compose up --build
   ```
   This will build the frontend and backend images and start all services.

4. **Access the services:**
   - **Frontend (Vue.js):** http://localhost:8013
   - **Backend (Spring Boot API):** http://localhost:8080
   - **MySQL:** localhost:3306 (user: `eladmin`, password: `eladmin`)
   - **Redis:** localhost:6379

### Special Configuration Notes

- The frontend (`eladmin-web`) is built and served as static files using the `serve` package.
- The backend (`eladmin-system`) is built with Maven (using the Maven wrapper) and runs as a Spring Boot JAR.
- Both frontend and backend run as non-root users inside their containers for improved security.
- The frontend is configured to depend on the backend, and the backend depends on MySQL and Redis.
- All services are connected via the `eladmin-net` Docker network.

### Exposed Ports Summary

| Service                | Container Port | Host Port |
|------------------------|---------------|-----------|
| Frontend (eladmin-web) | 8013          | 8013      |
| Backend (eladmin-system)| 8080         | 8080      |
| MySQL                  | 3306          | 3306      |
| Redis                  | 6379          | 6379      |

---

_This section was updated to reflect the current Docker-based setup for this project. Please refer to the `compose.yaml` and Dockerfiles for further customization options._
